/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Shallowfind
 * Shallowfind Financial Planner
 * OpenAPI spec version: 0.0.1
 */
import {
  z as zod
} from 'zod';


/**
 * A viewset for viewing and editing user instances.
 */
export const usersListResponseEmailMax = 254;
export const usersListResponseFirstNameMax = 150;
export const usersListResponseLastNameMax = 150;


export const usersListResponseItem = zod.object({
  "id": zod.number(),
  "email": zod.string().email().max(usersListResponseEmailMax).describe('Required. Enter a valid email address.'),
  "first_name": zod.string().max(usersListResponseFirstNameMax).optional(),
  "last_name": zod.string().max(usersListResponseLastNameMax).optional(),
  "is_active": zod.boolean().optional().describe('Designates whether this user should be treated as active. Unselect this instead of deleting accounts.'),
  "is_staff": zod.boolean().optional().describe('Designates whether the user can log into this admin site.')
})
export const usersListResponse = zod.array(usersListResponseItem)

/**
 * A viewset for viewing and editing user instances.
 */
export const usersCreateBodyEmailMax = 254;
export const usersCreateBodyFirstNameMax = 150;
export const usersCreateBodyLastNameMax = 150;


export const usersCreateBody = zod.object({
  "email": zod.string().email().max(usersCreateBodyEmailMax).describe('Required. Enter a valid email address.'),
  "first_name": zod.string().max(usersCreateBodyFirstNameMax).optional(),
  "last_name": zod.string().max(usersCreateBodyLastNameMax).optional(),
  "is_active": zod.boolean().optional().describe('Designates whether this user should be treated as active. Unselect this instead of deleting accounts.'),
  "is_staff": zod.boolean().optional().describe('Designates whether the user can log into this admin site.')
})

/**
 * A viewset for viewing and editing user instances.
 */
export const usersRetrieveParams = zod.object({
  "id": zod.number().describe('A unique integer value identifying this user.')
})

export const usersRetrieveResponseEmailMax = 254;
export const usersRetrieveResponseFirstNameMax = 150;
export const usersRetrieveResponseLastNameMax = 150;


export const usersRetrieveResponse = zod.object({
  "id": zod.number(),
  "email": zod.string().email().max(usersRetrieveResponseEmailMax).describe('Required. Enter a valid email address.'),
  "first_name": zod.string().max(usersRetrieveResponseFirstNameMax).optional(),
  "last_name": zod.string().max(usersRetrieveResponseLastNameMax).optional(),
  "is_active": zod.boolean().optional().describe('Designates whether this user should be treated as active. Unselect this instead of deleting accounts.'),
  "is_staff": zod.boolean().optional().describe('Designates whether the user can log into this admin site.')
})

/**
 * A viewset for viewing and editing user instances.
 */
export const usersUpdateParams = zod.object({
  "id": zod.number().describe('A unique integer value identifying this user.')
})

export const usersUpdateBodyEmailMax = 254;
export const usersUpdateBodyFirstNameMax = 150;
export const usersUpdateBodyLastNameMax = 150;


export const usersUpdateBody = zod.object({
  "email": zod.string().email().max(usersUpdateBodyEmailMax).describe('Required. Enter a valid email address.'),
  "first_name": zod.string().max(usersUpdateBodyFirstNameMax).optional(),
  "last_name": zod.string().max(usersUpdateBodyLastNameMax).optional(),
  "is_active": zod.boolean().optional().describe('Designates whether this user should be treated as active. Unselect this instead of deleting accounts.'),
  "is_staff": zod.boolean().optional().describe('Designates whether the user can log into this admin site.')
})

export const usersUpdateResponseEmailMax = 254;
export const usersUpdateResponseFirstNameMax = 150;
export const usersUpdateResponseLastNameMax = 150;


export const usersUpdateResponse = zod.object({
  "id": zod.number(),
  "email": zod.string().email().max(usersUpdateResponseEmailMax).describe('Required. Enter a valid email address.'),
  "first_name": zod.string().max(usersUpdateResponseFirstNameMax).optional(),
  "last_name": zod.string().max(usersUpdateResponseLastNameMax).optional(),
  "is_active": zod.boolean().optional().describe('Designates whether this user should be treated as active. Unselect this instead of deleting accounts.'),
  "is_staff": zod.boolean().optional().describe('Designates whether the user can log into this admin site.')
})

/**
 * A viewset for viewing and editing user instances.
 */
export const usersPartialUpdateParams = zod.object({
  "id": zod.number().describe('A unique integer value identifying this user.')
})

export const usersPartialUpdateBodyEmailMax = 254;
export const usersPartialUpdateBodyFirstNameMax = 150;
export const usersPartialUpdateBodyLastNameMax = 150;


export const usersPartialUpdateBody = zod.object({
  "email": zod.string().email().max(usersPartialUpdateBodyEmailMax).optional().describe('Required. Enter a valid email address.'),
  "first_name": zod.string().max(usersPartialUpdateBodyFirstNameMax).optional(),
  "last_name": zod.string().max(usersPartialUpdateBodyLastNameMax).optional(),
  "is_active": zod.boolean().optional().describe('Designates whether this user should be treated as active. Unselect this instead of deleting accounts.'),
  "is_staff": zod.boolean().optional().describe('Designates whether the user can log into this admin site.')
})

export const usersPartialUpdateResponseEmailMax = 254;
export const usersPartialUpdateResponseFirstNameMax = 150;
export const usersPartialUpdateResponseLastNameMax = 150;


export const usersPartialUpdateResponse = zod.object({
  "id": zod.number(),
  "email": zod.string().email().max(usersPartialUpdateResponseEmailMax).describe('Required. Enter a valid email address.'),
  "first_name": zod.string().max(usersPartialUpdateResponseFirstNameMax).optional(),
  "last_name": zod.string().max(usersPartialUpdateResponseLastNameMax).optional(),
  "is_active": zod.boolean().optional().describe('Designates whether this user should be treated as active. Unselect this instead of deleting accounts.'),
  "is_staff": zod.boolean().optional().describe('Designates whether the user can log into this admin site.')
})

/**
 * A viewset for viewing and editing user instances.
 */
export const usersDestroyParams = zod.object({
  "id": zod.number().describe('A unique integer value identifying this user.')
})

