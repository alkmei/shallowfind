/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Scenario Manager API
 * API for managing scenarios, strategies, and investments.
 * OpenAPI spec version: v1
 */
import axios from 'axios';
import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
  CreateInvestmentTypeRequest,
  InvestmentTypeResponse
} from '../scenarioManagerAPI.schemas';

export const getInvestmentTypes = () => {
  const postApiScenariosScenarioIdInvestmentTypes = <TData = AxiosResponse<InvestmentTypeResponse>>(
    scenarioId: string,
    createInvestmentTypeRequest: CreateInvestmentTypeRequest,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.post(
      `http://localhost:5050/api/scenarios/${scenarioId}/investment-types`,
      createInvestmentTypeRequest,
      options
    );
  };
  const getApiScenariosScenarioIdInvestmentTypes = <
    TData = AxiosResponse<InvestmentTypeResponse[]>
  >(
    scenarioId: string,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.get(`http://localhost:5050/api/scenarios/${scenarioId}/investment-types`, options);
  };
  const getApiScenariosScenarioIdInvestmentTypesId = <
    TData = AxiosResponse<InvestmentTypeResponse>
  >(
    scenarioId: string,
    id: string,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.get(
      `http://localhost:5050/api/scenarios/${scenarioId}/investment-types/${id}`,
      options
    );
  };
  const putApiScenariosScenarioIdInvestmentTypesId = <
    TData = AxiosResponse<InvestmentTypeResponse>
  >(
    scenarioId: string,
    id: string,
    createInvestmentTypeRequest: CreateInvestmentTypeRequest,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.put(
      `http://localhost:5050/api/scenarios/${scenarioId}/investment-types/${id}`,
      createInvestmentTypeRequest,
      options
    );
  };
  const deleteApiScenariosScenarioIdInvestmentTypesId = <TData = AxiosResponse<null>>(
    scenarioId: string,
    id: string,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios
      .delete(`http://localhost:5050/api/scenarios/${scenarioId}/investment-types/${id}`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  return {
    postApiScenariosScenarioIdInvestmentTypes,
    getApiScenariosScenarioIdInvestmentTypes,
    getApiScenariosScenarioIdInvestmentTypesId,
    putApiScenariosScenarioIdInvestmentTypesId,
    deleteApiScenariosScenarioIdInvestmentTypesId
  };
};
export type PostApiScenariosScenarioIdInvestmentTypesResult = AxiosResponse<InvestmentTypeResponse>;
export type GetApiScenariosScenarioIdInvestmentTypesResult = AxiosResponse<
  InvestmentTypeResponse[]
>;
export type GetApiScenariosScenarioIdInvestmentTypesIdResult =
  AxiosResponse<InvestmentTypeResponse>;
export type PutApiScenariosScenarioIdInvestmentTypesIdResult =
  AxiosResponse<InvestmentTypeResponse>;
export type DeleteApiScenariosScenarioIdInvestmentTypesIdResult = AxiosResponse<null>;
