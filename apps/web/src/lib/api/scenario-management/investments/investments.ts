/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Scenario Manager API
 * API for managing scenarios, strategies, and investments.
 * OpenAPI spec version: v1
 */
import axios from 'axios';
import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
  CreateInvestmentRequest,
  InvestmentResponse,
  UpdateInvestmentRequest
} from '../scenarioManagerAPI.schemas';

export const getInvestments = () => {
  const postApiScenariosScenarioIdInvestments = <TData = AxiosResponse<InvestmentResponse>>(
    scenarioId: string,
    createInvestmentRequest: CreateInvestmentRequest,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.post(
      `http://localhost:5050/api/scenarios/${scenarioId}/investments`,
      createInvestmentRequest,
      options
    );
  };
  const getApiScenariosScenarioIdInvestments = <TData = AxiosResponse<InvestmentResponse[]>>(
    scenarioId: string,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.get(`http://localhost:5050/api/scenarios/${scenarioId}/investments`, options);
  };
  const getApiScenariosScenarioIdInvestmentsId = <TData = AxiosResponse<InvestmentResponse>>(
    scenarioId: string,
    id: string,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.get(
      `http://localhost:5050/api/scenarios/${scenarioId}/investments/${id}`,
      options
    );
  };
  const putApiScenariosScenarioIdInvestmentsId = <TData = AxiosResponse<InvestmentResponse>>(
    scenarioId: string,
    id: string,
    createInvestmentRequest: CreateInvestmentRequest,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.put(
      `http://localhost:5050/api/scenarios/${scenarioId}/investments/${id}`,
      createInvestmentRequest,
      options
    );
  };
  const patchApiScenariosScenarioIdInvestmentsId = <TData = AxiosResponse<InvestmentResponse>>(
    scenarioId: string,
    id: string,
    updateInvestmentRequest: UpdateInvestmentRequest,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.patch(
      `http://localhost:5050/api/scenarios/${scenarioId}/investments/${id}`,
      updateInvestmentRequest,
      options
    );
  };
  const deleteApiScenariosScenarioIdInvestmentsId = <TData = AxiosResponse<null>>(
    scenarioId: string,
    id: string,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios
      .delete(`http://localhost:5050/api/scenarios/${scenarioId}/investments/${id}`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  return {
    postApiScenariosScenarioIdInvestments,
    getApiScenariosScenarioIdInvestments,
    getApiScenariosScenarioIdInvestmentsId,
    putApiScenariosScenarioIdInvestmentsId,
    patchApiScenariosScenarioIdInvestmentsId,
    deleteApiScenariosScenarioIdInvestmentsId
  };
};
export type PostApiScenariosScenarioIdInvestmentsResult = AxiosResponse<InvestmentResponse>;
export type GetApiScenariosScenarioIdInvestmentsResult = AxiosResponse<InvestmentResponse[]>;
export type GetApiScenariosScenarioIdInvestmentsIdResult = AxiosResponse<InvestmentResponse>;
export type PutApiScenariosScenarioIdInvestmentsIdResult = AxiosResponse<InvestmentResponse>;
export type PatchApiScenariosScenarioIdInvestmentsIdResult = AxiosResponse<InvestmentResponse>;
export type DeleteApiScenariosScenarioIdInvestmentsIdResult = AxiosResponse<null>;
