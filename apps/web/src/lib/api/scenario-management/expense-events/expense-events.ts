/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Scenario Manager API
 * API for managing scenarios, strategies, and investments.
 * OpenAPI spec version: v1
 */
import axios from 'axios';
import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type { CreateExpenseEventRequest, EventSeriesResponse } from '../scenarioManagerAPI.schemas';

export const getExpenseEvents = () => {
  const postApiScenariosScenarioIdExpenseEvents = <TData = AxiosResponse<EventSeriesResponse>>(
    scenarioId: string,
    createExpenseEventRequest: CreateExpenseEventRequest,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.post(
      `http://localhost:5010/api/scenarios/${scenarioId}/expense-events`,
      createExpenseEventRequest,
      options
    );
  };
  const getApiScenariosScenarioIdExpenseEvents = <TData = AxiosResponse<EventSeriesResponse[]>>(
    scenarioId: string,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.get(`http://localhost:5010/api/scenarios/${scenarioId}/expense-events`, options);
  };
  const getApiScenariosScenarioIdExpenseEventsId = <TData = AxiosResponse<EventSeriesResponse>>(
    scenarioId: string,
    id: string,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.get(
      `http://localhost:5010/api/scenarios/${scenarioId}/expense-events/${id}`,
      options
    );
  };
  const putApiScenariosScenarioIdExpenseEventsId = <TData = AxiosResponse<EventSeriesResponse>>(
    scenarioId: string,
    id: string,
    createExpenseEventRequest: CreateExpenseEventRequest,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.put(
      `http://localhost:5010/api/scenarios/${scenarioId}/expense-events/${id}`,
      createExpenseEventRequest,
      options
    );
  };
  const deleteApiScenariosScenarioIdExpenseEventsId = <TData = AxiosResponse<null>>(
    scenarioId: string,
    id: string,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios
      .delete(`http://localhost:5010/api/scenarios/${scenarioId}/expense-events/${id}`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  return {
    postApiScenariosScenarioIdExpenseEvents,
    getApiScenariosScenarioIdExpenseEvents,
    getApiScenariosScenarioIdExpenseEventsId,
    putApiScenariosScenarioIdExpenseEventsId,
    deleteApiScenariosScenarioIdExpenseEventsId
  };
};
export type PostApiScenariosScenarioIdExpenseEventsResult = AxiosResponse<EventSeriesResponse>;
export type GetApiScenariosScenarioIdExpenseEventsResult = AxiosResponse<EventSeriesResponse[]>;
export type GetApiScenariosScenarioIdExpenseEventsIdResult = AxiosResponse<EventSeriesResponse>;
export type PutApiScenariosScenarioIdExpenseEventsIdResult = AxiosResponse<EventSeriesResponse>;
export type DeleteApiScenariosScenarioIdExpenseEventsIdResult = AxiosResponse<null>;
