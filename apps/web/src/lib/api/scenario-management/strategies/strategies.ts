/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Scenario Manager API
 * API for managing scenarios, strategies, and investments.
 * OpenAPI spec version: v1
 */
import axios from 'axios';
import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type { CreateStrategyRequest, StrategyResponse } from '../scenarioManagerAPI.schemas';

export const getStrategies = () => {
  const postApiScenariosScenarioIdStrategies = <TData = AxiosResponse<StrategyResponse>>(
    scenarioId: string,
    createStrategyRequest: CreateStrategyRequest,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.post(
      `http://localhost:5050/api/scenarios/${scenarioId}/strategies`,
      createStrategyRequest,
      options
    );
  };
  const getApiScenariosScenarioIdStrategies = <TData = AxiosResponse<StrategyResponse[]>>(
    scenarioId: string,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.get(`http://localhost:5050/api/scenarios/${scenarioId}/strategies`, options);
  };
  const getApiScenariosScenarioIdStrategiesId = <TData = AxiosResponse<StrategyResponse>>(
    scenarioId: string,
    id: string,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.get(`http://localhost:5050/api/scenarios/${scenarioId}/strategies/${id}`, options);
  };
  const putApiScenariosScenarioIdStrategiesId = <TData = AxiosResponse<StrategyResponse>>(
    scenarioId: string,
    id: string,
    createStrategyRequest: CreateStrategyRequest,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios.put(
      `http://localhost:5050/api/scenarios/${scenarioId}/strategies/${id}`,
      createStrategyRequest,
      options
    );
  };
  const deleteApiScenariosScenarioIdStrategiesId = <TData = AxiosResponse<null>>(
    scenarioId: string,
    id: string,
    options?: AxiosRequestConfig
  ): Promise<TData> => {
    return axios
      .delete(`http://localhost:5050/api/scenarios/${scenarioId}/strategies/${id}`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  return {
    postApiScenariosScenarioIdStrategies,
    getApiScenariosScenarioIdStrategies,
    getApiScenariosScenarioIdStrategiesId,
    putApiScenariosScenarioIdStrategiesId,
    deleteApiScenariosScenarioIdStrategiesId
  };
};
export type PostApiScenariosScenarioIdStrategiesResult = AxiosResponse<StrategyResponse>;
export type GetApiScenariosScenarioIdStrategiesResult = AxiosResponse<StrategyResponse[]>;
export type GetApiScenariosScenarioIdStrategiesIdResult = AxiosResponse<StrategyResponse>;
export type PutApiScenariosScenarioIdStrategiesIdResult = AxiosResponse<StrategyResponse>;
export type DeleteApiScenariosScenarioIdStrategiesIdResult = AxiosResponse<null>;
