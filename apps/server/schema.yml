openapi: 3.0.3
info:
  title: Shallowfind
  version: 0.0.1
  description: Shallowfind Financial Planner
paths:
  /api/scenarios/:
    get:
      operationId: scenarios_list
      description: |-
        ViewSet for managing scenarios with full CRUD operations.
        Provides list, create, retrieve, update, destroy actions.
      tags:
      - scenarios
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scenario'
          description: ''
    post:
      operationId: scenarios_create
      description: |-
        ViewSet for managing scenarios with full CRUD operations.
        Provides list, create, retrieve, update, destroy actions.
      tags:
      - scenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
  /api/scenarios/{id}/:
    get:
      operationId: scenarios_retrieve
      description: |-
        ViewSet for managing scenarios with full CRUD operations.
        Provides list, create, retrieve, update, destroy actions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
    put:
      operationId: scenarios_update
      description: |-
        ViewSet for managing scenarios with full CRUD operations.
        Provides list, create, retrieve, update, destroy actions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
    patch:
      operationId: scenarios_partial_update
      description: |-
        ViewSet for managing scenarios with full CRUD operations.
        Provides list, create, retrieve, update, destroy actions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScenario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedScenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedScenario'
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
    delete:
      operationId: scenarios_destroy
      description: |-
        ViewSet for managing scenarios with full CRUD operations.
        Provides list, create, retrieve, update, destroy actions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/scenarios/{id}/clone/:
    post:
      operationId: scenarios_clone_create
      description: Clone an existing scenario
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
  /api/scenarios/{id}/export/:
    get:
      operationId: scenarios_export_retrieve
      description: Export scenario as YAML
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
  /api/scenarios/{id}/simulate/:
    post:
      operationId: scenarios_simulate_create
      description: Run Monte Carlo simulations for this scenario
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
  /api/scenarios/{id}/validate_scenario/:
    get:
      operationId: scenarios_validate_scenario_retrieve
      description: Validate scenario for simulation readiness
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
  /api/scenarios/import_scenario/:
    post:
      operationId: scenarios_import_scenario_create
      description: Import scenario from YAML file
      tags:
      - scenarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
  /api/session/:
    post:
      operationId: session_create
      description: Handle user login with email.
      tags:
      - session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Session'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Session'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: ''
    delete:
      operationId: session_destroy
      description: Handle user logout.
      tags:
      - session
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      description: A viewset for viewing and editing user instances.
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      description: A viewset for viewing and editing user instances.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: A viewset for viewing and editing user instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: A viewset for viewing and editing user instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: A viewset for viewing and editing user instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: A viewset for viewing and editing user instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Distribution:
      type: object
      description: Serializer for probability distributions
      properties:
        type:
          $ref: '#/components/schemas/DistributionTypeEnum'
        value:
          type: number
          format: double
          nullable: true
        mean:
          type: number
          format: double
          nullable: true
        stdev:
          type: number
          format: double
          nullable: true
        lower:
          type: number
          format: double
          nullable: true
        upper:
          type: number
          format: double
          nullable: true
      required:
      - type
    DistributionTypeEnum:
      enum:
      - fixed
      - normal
      - uniform
      type: string
      description: |-
        * `fixed` - Fixed
        * `normal` - Normal
        * `uniform` - Uniform
    EventSeries:
      type: object
      description: Serializer for event series with complex nested data
      properties:
        name:
          type: string
          maxLength: 100
        start:
          $ref: '#/components/schemas/Distribution'
        duration:
          $ref: '#/components/schemas/Distribution'
        type:
          $ref: '#/components/schemas/EventSeriesTypeEnum'
        initialAmount:
          type: number
          format: double
        changeAmtOrPct:
          type: string
        changeDistribution:
          $ref: '#/components/schemas/Distribution'
        inflationAdjusted:
          type: boolean
        userFraction:
          type: number
          format: double
        socialSecurity:
          type: boolean
        discretionary:
          type: boolean
        assetAllocation:
          type: object
          additionalProperties: {}
          description: Get initial asset allocation as dict
          readOnly: true
        glidePath:
          type: boolean
        assetAllocation2:
          type: object
          additionalProperties: {}
          description: Get final asset allocation for glide path
          readOnly: true
        maxCash:
          type: number
          format: double
      required:
      - assetAllocation
      - assetAllocation2
      - duration
      - name
      - type
    EventSeriesTypeEnum:
      enum:
      - income
      - expense
      - invest
      - rebalance
      type: string
      description: |-
        * `income` - Income
        * `expense` - Expense
        * `invest` - Invest
        * `rebalance` - Rebalance
    Investment:
      type: object
      description: Serializer for individual investments
      properties:
        investmentType:
          type: string
        value:
          type: number
          format: double
        taxStatus:
          type: string
        id:
          type: string
      required:
      - id
      - investmentType
      - taxStatus
      - value
    InvestmentType:
      type: object
      description: Serializer for investment types
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
        returnAmtOrPct:
          type: string
        returnDistribution:
          $ref: '#/components/schemas/Distribution'
        expenseRatio:
          type: number
          format: double
        incomeAmtOrPct:
          type: string
        incomeDistribution:
          $ref: '#/components/schemas/Distribution'
        taxability:
          type: boolean
      required:
      - description
      - expenseRatio
      - incomeAmtOrPct
      - incomeDistribution
      - name
      - returnAmtOrPct
      - returnDistribution
      - taxability
    PatchedScenario:
      type: object
      description: Main serializer for complete scenarios matching YAML format
      properties:
        name:
          type: string
          maxLength: 200
        maritalStatus:
          type: string
        birthYears:
          type: array
          items:
            type: integer
          readOnly: true
        lifeExpectancy:
          type: array
          items:
            $ref: '#/components/schemas/Distribution'
          readOnly: true
        investmentTypes:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentType'
        investments:
          type: array
          items:
            $ref: '#/components/schemas/Investment'
        eventSeries:
          type: array
          items:
            $ref: '#/components/schemas/EventSeries'
        inflationAssumption:
          $ref: '#/components/schemas/Distribution'
        afterTaxContributionLimit:
          type: number
          format: double
        spendingStrategy:
          type: array
          items:
            type: string
          readOnly: true
        expenseWithdrawalStrategy:
          type: array
          items:
            type: string
          readOnly: true
        RMDStrategy:
          type: array
          items:
            type: string
          readOnly: true
        RothConversionOpt:
          type: boolean
        RothConversionStart:
          type: integer
        RothConversionEnd:
          type: integer
        RothConversionStrategy:
          type: array
          items:
            type: string
          readOnly: true
        financialGoal:
          type: number
          format: double
        residenceState:
          type: string
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          description: Required. Enter a valid email address.
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
    Scenario:
      type: object
      description: Main serializer for complete scenarios matching YAML format
      properties:
        name:
          type: string
          maxLength: 200
        maritalStatus:
          type: string
        birthYears:
          type: array
          items:
            type: integer
          readOnly: true
        lifeExpectancy:
          type: array
          items:
            $ref: '#/components/schemas/Distribution'
          readOnly: true
        investmentTypes:
          type: array
          items:
            $ref: '#/components/schemas/InvestmentType'
        investments:
          type: array
          items:
            $ref: '#/components/schemas/Investment'
        eventSeries:
          type: array
          items:
            $ref: '#/components/schemas/EventSeries'
        inflationAssumption:
          $ref: '#/components/schemas/Distribution'
        afterTaxContributionLimit:
          type: number
          format: double
        spendingStrategy:
          type: array
          items:
            type: string
          readOnly: true
        expenseWithdrawalStrategy:
          type: array
          items:
            type: string
          readOnly: true
        RMDStrategy:
          type: array
          items:
            type: string
          readOnly: true
        RothConversionOpt:
          type: boolean
        RothConversionStart:
          type: integer
        RothConversionEnd:
          type: integer
        RothConversionStrategy:
          type: array
          items:
            type: string
          readOnly: true
        financialGoal:
          type: number
          format: double
        residenceState:
          type: string
      required:
      - RMDStrategy
      - RothConversionOpt
      - RothConversionStrategy
      - afterTaxContributionLimit
      - birthYears
      - eventSeries
      - expenseWithdrawalStrategy
      - financialGoal
      - inflationAssumption
      - investmentTypes
      - investments
      - lifeExpectancy
      - maritalStatus
      - name
      - residenceState
      - spendingStrategy
    Session:
      type: object
      description: Serializer for handling user login data.
      properties:
        email:
          type: string
          format: email
          maxLength: 150
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          description: Required. Enter a valid email address.
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
      required:
      - email
      - id
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
