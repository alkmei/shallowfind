openapi: 3.0.3
info:
  title: Shallowfind
  version: 0.0.1
  description: Shallowfind Financial Planner
paths:
  /api/admin/users/:
    get:
      operationId: admin_users_list
      description: ViewSet for admin users to manage all user accounts.
      tags:
      - admin
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminUser'
          description: ''
    post:
      operationId: admin_users_create
      description: ViewSet for admin users to manage all user accounts.
      tags:
      - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
  /api/admin/users/{id}/:
    get:
      operationId: admin_users_retrieve
      description: ViewSet for admin users to manage all user accounts.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - admin
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    put:
      operationId: admin_users_update
      description: ViewSet for admin users to manage all user accounts.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    patch:
      operationId: admin_users_partial_update
      description: ViewSet for admin users to manage all user accounts.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    delete:
      operationId: admin_users_destroy
      description: ViewSet for admin users to manage all user accounts.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - admin
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/admin/users/{id}/activate/:
    post:
      operationId: admin_users_activate_create
      description: Activate a user account.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
  /api/admin/users/{id}/deactivate/:
    post:
      operationId: admin_users_deactivate_create
      description: Deactivate a user account.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
  /api/admin/users/{id}/make_staff/:
    post:
      operationId: admin_users_make_staff_create
      description: Grant staff privileges to a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
  /api/admin/users/{id}/remove_staff/:
    post:
      operationId: admin_users_remove_staff_create
      description: Remove staff privileges from a user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - admin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
  /api/scenarios/:
    get:
      operationId: scenarios_list
      description: |-
        ViewSet for managing scenarios with full CRUD operations.
        Provides list, create, retrieve, update, destroy actions.
      tags:
      - scenarios
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scenario'
          description: ''
    post:
      operationId: scenarios_create
      description: |-
        ViewSet for managing scenarios with full CRUD operations.
        Provides list, create, retrieve, update, destroy actions.
      tags:
      - scenarios
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
  /api/scenarios/{id}/:
    get:
      operationId: scenarios_retrieve
      description: |-
        ViewSet for managing scenarios with full CRUD operations.
        Provides list, create, retrieve, update, destroy actions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
    put:
      operationId: scenarios_update
      description: |-
        ViewSet for managing scenarios with full CRUD operations.
        Provides list, create, retrieve, update, destroy actions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
    patch:
      operationId: scenarios_partial_update
      description: |-
        ViewSet for managing scenarios with full CRUD operations.
        Provides list, create, retrieve, update, destroy actions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedScenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedScenario'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScenario'
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
    delete:
      operationId: scenarios_destroy
      description: |-
        ViewSet for managing scenarios with full CRUD operations.
        Provides list, create, retrieve, update, destroy actions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/scenarios/{id}/clone/:
    post:
      operationId: scenarios_clone_create
      description: Clone an existing scenario
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
  /api/scenarios/{id}/export/:
    get:
      operationId: scenarios_export_retrieve
      description: Export scenario as YAML
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
  /api/scenarios/{id}/simulate/:
    post:
      operationId: scenarios_simulate_create
      description: Run Monte Carlo simulations for this scenario
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
  /api/scenarios/{id}/validate_scenario/:
    get:
      operationId: scenarios_validate_scenario_retrieve
      description: Validate scenario for simulation readiness
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scenario.
        required: true
      tags:
      - scenarios
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
  /api/scenarios/import_scenario/:
    post:
      operationId: scenarios_import_scenario_create
      description: Import scenario from YAML file
      tags:
      - scenarios
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scenario'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scenario'
          application/json:
            schema:
              $ref: '#/components/schemas/Scenario'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: ''
  /api/session/:
    post:
      operationId: session_create
      description: Handle user login with email.
      tags:
      - session
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Session'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Session'
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: ''
    delete:
      operationId: session_destroy
      description: Handle user logout.
      tags:
      - session
      security:
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      description: Get current user's information.
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      description: Create a new user account. This endpoint allows unauthenticated
        access for registration.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: Get current user's information by ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: Update user account (PUT).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: Partially update user account (PATCH).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: Delete user account.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/users/me/:
    get:
      operationId: users_me_retrieve
      description: Endpoint for users to manage their own profile at /users/me/
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_me_update
      description: Endpoint for users to manage their own profile at /users/me/
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_me_partial_update
      description: Endpoint for users to manage their own profile at /users/me/
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_me_destroy
      description: Endpoint for users to manage their own profile at /users/me/
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AdminUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          description: Required. Enter a valid email address.
          maxLength: 254
        firstName:
          type: string
          maxLength: 150
        lastName:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        passwordConfirm:
          type: string
          writeOnly: true
        isActive:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        isStaff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        isSuperuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        dateJoined:
          type: string
          format: date-time
          readOnly: true
        lastLogin:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - dateJoined
      - email
      - id
      - lastLogin
    AmountOrPercentEnum:
      enum:
      - amount
      - percent
      type: string
      description: |-
        * `amount` - Amount
        * `percent` - Percent
    AssetAllocation:
      type: object
      properties:
        investmentId:
          type: string
          readOnly: true
        percentage:
          type: number
          format: double
        isFinalAllocation:
          type: boolean
      required:
      - investmentId
      - percentage
    BlankEnum:
      enum:
      - ''
    Distribution:
      type: object
      description: Serializer for distribution JSON field
      properties:
        type:
          $ref: '#/components/schemas/DistributionTypeEnum'
        value:
          type: number
          format: double
          nullable: true
        mean:
          type: number
          format: double
          nullable: true
        stdev:
          type: number
          format: double
          nullable: true
        lower:
          type: number
          format: double
          nullable: true
        upper:
          type: number
          format: double
          nullable: true
      required:
      - type
    DistributionTypeEnum:
      enum:
      - fixed
      - normal
      - uniform
      type: string
      description: |-
        * `fixed` - fixed
        * `normal` - normal
        * `uniform` - uniform
    EventSeries:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
        startType:
          $ref: '#/components/schemas/StartTypeEnum'
        startDistribution:
          allOf:
          - $ref: '#/components/schemas/Distribution'
          nullable: true
        startWithEventName:
          type: string
          readOnly: true
        startAfterEventName:
          type: string
          readOnly: true
        durationDistribution:
          $ref: '#/components/schemas/Distribution'
        type:
          $ref: '#/components/schemas/EventSeriesTypeEnum'
        initialAmount:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
          nullable: true
        changeAmtOrPct:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/AmountOrPercentEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        changeDistribution:
          allOf:
          - $ref: '#/components/schemas/Distribution'
          nullable: true
        inflationAdjusted:
          type: boolean
        userFraction:
          type: number
          format: double
          nullable: true
        socialSecurity:
          type: boolean
        discretionary:
          type: boolean
        maxCash:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
          nullable: true
        glidePath:
          type: boolean
        assetAllocations:
          type: array
          items:
            $ref: '#/components/schemas/AssetAllocation'
          readOnly: true
        startWithEventNameInput:
          type: string
          writeOnly: true
          nullable: true
        startAfterEventNameInput:
          type: string
          writeOnly: true
          nullable: true
        assetAllocationInput:
          type: object
          additionalProperties: {}
          writeOnly: true
        assetAllocation2Input:
          type: object
          additionalProperties: {}
          writeOnly: true
      required:
      - assetAllocations
      - durationDistribution
      - name
      - startAfterEventName
      - startType
      - startWithEventName
      - type
    EventSeriesTypeEnum:
      enum:
      - income
      - expense
      - invest
      - rebalance
      type: string
      description: |-
        * `income` - Income
        * `expense` - Expense
        * `invest` - Invest
        * `rebalance` - Rebalance
    ExpenseWithdrawalStrategyItem:
      type: object
      properties:
        investmentId:
          type: string
          readOnly: true
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - investmentId
      - order
    Investment:
      type: object
      properties:
        investmentType:
          $ref: '#/components/schemas/InvestmentType'
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
        taxStatus:
          $ref: '#/components/schemas/TaxStatusEnum'
        investmentId:
          type: string
          maxLength: 100
      required:
      - investmentId
      - investmentType
      - taxStatus
      - value
    InvestmentType:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
        returnAmtOrPct:
          $ref: '#/components/schemas/AmountOrPercentEnum'
        returnDistribution:
          $ref: '#/components/schemas/Distribution'
        expenseRatio:
          type: number
          format: double
        incomeAmtOrPct:
          $ref: '#/components/schemas/AmountOrPercentEnum'
        incomeDistribution:
          $ref: '#/components/schemas/Distribution'
        taxability:
          type: boolean
      required:
      - description
      - expenseRatio
      - incomeAmtOrPct
      - incomeDistribution
      - name
      - returnAmtOrPct
      - returnDistribution
      - taxability
    MaritalStatusEnum:
      enum:
      - individual
      - couple
      type: string
      description: |-
        * `individual` - Individual
        * `couple` - Couple
    NullEnum:
      enum:
      - null
    PatchedAdminUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          description: Required. Enter a valid email address.
          maxLength: 254
        firstName:
          type: string
          maxLength: 150
        lastName:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        passwordConfirm:
          type: string
          writeOnly: true
        isActive:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        isStaff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        isSuperuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        dateJoined:
          type: string
          format: date-time
          readOnly: true
        lastLogin:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PatchedScenario:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatusEnum'
        userBirthYear:
          type: integer
          maximum: 2025
          minimum: 1900
        spouseBirthYear:
          type: integer
          maximum: 2025
          minimum: 1900
          nullable: true
        userLifeExpectancy:
          $ref: '#/components/schemas/Distribution'
        spouseLifeExpectancy:
          allOf:
          - $ref: '#/components/schemas/Distribution'
          nullable: true
        inflationAssumption:
          $ref: '#/components/schemas/Distribution'
        afterTaxContributionLimit:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        financialGoal:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
        residenceState:
          $ref: '#/components/schemas/ResidenceStateEnum'
        rothConversionOpt:
          type: boolean
        rothConversionStart:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        rothConversionEnd:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        investments:
          type: array
          items:
            $ref: '#/components/schemas/Investment'
        eventSeries:
          type: array
          items:
            $ref: '#/components/schemas/EventSeries'
        spendingStrategyItems:
          type: array
          items:
            $ref: '#/components/schemas/SpendingStrategyItem'
          readOnly: true
        expenseWithdrawalStrategyItems:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseWithdrawalStrategyItem'
          readOnly: true
        rmdStrategyItems:
          type: array
          items:
            $ref: '#/components/schemas/RMDStrategyItem'
          readOnly: true
        rothConversionStrategyItems:
          type: array
          items:
            $ref: '#/components/schemas/RothConversionStrategyItem'
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        spendingStrategyInput:
          type: array
          items:
            type: string
          writeOnly: true
        expenseWithdrawalStrategyInput:
          type: array
          items:
            type: string
          writeOnly: true
        rmdStrategyInput:
          type: array
          items:
            type: string
          writeOnly: true
        rothConversionStrategyInput:
          type: array
          items:
            type: string
          writeOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          description: Required. Enter a valid email address.
          maxLength: 254
        firstName:
          type: string
          maxLength: 150
        lastName:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        passwordConfirm:
          type: string
          writeOnly: true
        isActive:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        isStaff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        dateJoined:
          type: string
          format: date-time
          readOnly: true
        lastLogin:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    RMDStrategyItem:
      type: object
      properties:
        investmentId:
          type: string
          readOnly: true
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - investmentId
      - order
    ResidenceStateEnum:
      enum:
      - AL
      - AK
      - AZ
      - AR
      - CA
      - CO
      - CT
      - DE
      - FL
      - GA
      - HI
      - ID
      - IL
      - IN
      - IA
      - KS
      - KY
      - LA
      - ME
      - MD
      - MA
      - MI
      - MN
      - MS
      - MO
      - MT
      - NE
      - NV
      - NH
      - NJ
      - NM
      - NY
      - NC
      - ND
      - OH
      - OK
      - OR
      - PA
      - RI
      - SC
      - SD
      - TN
      - TX
      - UT
      - VT
      - VA
      - WA
      - WV
      - WI
      - WY
      type: string
      description: |-
        * `AL` - Alabama
        * `AK` - Alaska
        * `AZ` - Arizona
        * `AR` - Arkansas
        * `CA` - California
        * `CO` - Colorado
        * `CT` - Connecticut
        * `DE` - Delaware
        * `FL` - Florida
        * `GA` - Georgia
        * `HI` - Hawaii
        * `ID` - Idaho
        * `IL` - Illinois
        * `IN` - Indiana
        * `IA` - Iowa
        * `KS` - Kansas
        * `KY` - Kentucky
        * `LA` - Louisiana
        * `ME` - Maine
        * `MD` - Maryland
        * `MA` - Massachusetts
        * `MI` - Michigan
        * `MN` - Minnesota
        * `MS` - Mississippi
        * `MO` - Missouri
        * `MT` - Montana
        * `NE` - Nebraska
        * `NV` - Nevada
        * `NH` - New Hampshire
        * `NJ` - New Jersey
        * `NM` - New Mexico
        * `NY` - New York
        * `NC` - North Carolina
        * `ND` - North Dakota
        * `OH` - Ohio
        * `OK` - Oklahoma
        * `OR` - Oregon
        * `PA` - Pennsylvania
        * `RI` - Rhode Island
        * `SC` - South Carolina
        * `SD` - South Dakota
        * `TN` - Tennessee
        * `TX` - Texas
        * `UT` - Utah
        * `VT` - Vermont
        * `VA` - Virginia
        * `WA` - Washington
        * `WV` - West Virginia
        * `WI` - Wisconsin
        * `WY` - Wyoming
    RothConversionStrategyItem:
      type: object
      properties:
        investmentId:
          type: string
          readOnly: true
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - investmentId
      - order
    Scenario:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatusEnum'
        userBirthYear:
          type: integer
          maximum: 2025
          minimum: 1900
        spouseBirthYear:
          type: integer
          maximum: 2025
          minimum: 1900
          nullable: true
        userLifeExpectancy:
          $ref: '#/components/schemas/Distribution'
        spouseLifeExpectancy:
          allOf:
          - $ref: '#/components/schemas/Distribution'
          nullable: true
        inflationAssumption:
          $ref: '#/components/schemas/Distribution'
        afterTaxContributionLimit:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        financialGoal:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
        residenceState:
          $ref: '#/components/schemas/ResidenceStateEnum'
        rothConversionOpt:
          type: boolean
        rothConversionStart:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        rothConversionEnd:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
        investments:
          type: array
          items:
            $ref: '#/components/schemas/Investment'
        eventSeries:
          type: array
          items:
            $ref: '#/components/schemas/EventSeries'
        spendingStrategyItems:
          type: array
          items:
            $ref: '#/components/schemas/SpendingStrategyItem'
          readOnly: true
        expenseWithdrawalStrategyItems:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseWithdrawalStrategyItem'
          readOnly: true
        rmdStrategyItems:
          type: array
          items:
            $ref: '#/components/schemas/RMDStrategyItem'
          readOnly: true
        rothConversionStrategyItems:
          type: array
          items:
            $ref: '#/components/schemas/RothConversionStrategyItem'
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        spendingStrategyInput:
          type: array
          items:
            type: string
          writeOnly: true
        expenseWithdrawalStrategyInput:
          type: array
          items:
            type: string
          writeOnly: true
        rmdStrategyInput:
          type: array
          items:
            type: string
          writeOnly: true
        rothConversionStrategyInput:
          type: array
          items:
            type: string
          writeOnly: true
      required:
      - afterTaxContributionLimit
      - createdAt
      - eventSeries
      - expenseWithdrawalStrategyItems
      - financialGoal
      - id
      - inflationAssumption
      - investments
      - name
      - residenceState
      - rmdStrategyItems
      - rothConversionStrategyItems
      - spendingStrategyItems
      - updatedAt
      - userBirthYear
      - userLifeExpectancy
    Session:
      type: object
      description: Serializer for handling user login data.
      properties:
        email:
          type: string
          format: email
          maxLength: 150
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    SpendingStrategyItem:
      type: object
      properties:
        eventSeriesName:
          type: string
          readOnly: true
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - eventSeriesName
      - order
    StartTypeEnum:
      enum:
      - distribution
      - start_with
      - start_after
      type: string
      description: |-
        * `distribution` - Distribution
        * `start_with` - Start With Event
        * `start_after` - Start After Event
    TaxStatusEnum:
      enum:
      - non-retirement
      - pre-tax
      - after-tax
      type: string
      description: |-
        * `non-retirement` - Non-retirement
        * `pre-tax` - Pre-tax Retirement
        * `after-tax` - After-tax Retirement
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          description: Required. Enter a valid email address.
          maxLength: 254
        firstName:
          type: string
          maxLength: 150
        lastName:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        passwordConfirm:
          type: string
          writeOnly: true
        isActive:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        isStaff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        dateJoined:
          type: string
          format: date-time
          readOnly: true
        lastLogin:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - dateJoined
      - email
      - id
      - lastLogin
      - password
      - passwordConfirm
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
