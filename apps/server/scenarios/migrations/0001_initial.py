# Generated by Django 5.2.1 on 2025-05-29 01:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Distribution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("fixed", "Fixed"),
                            ("normal", "Normal"),
                            ("uniform", "Uniform"),
                        ],
                        max_length=10,
                    ),
                ),
                ("value", models.FloatField(blank=True, null=True)),
                ("mean", models.FloatField(blank=True, null=True)),
                ("stdev", models.FloatField(blank=True, null=True)),
                ("lower", models.FloatField(blank=True, null=True)),
                ("upper", models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="InvestmentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                (
                    "return_amt_or_pct",
                    models.CharField(
                        choices=[("amount", "Amount"), ("percent", "Percent")],
                        max_length=10,
                    ),
                ),
                ("expense_ratio", models.FloatField()),
                (
                    "income_amt_or_pct",
                    models.CharField(
                        choices=[("amount", "Amount"), ("percent", "Percent")],
                        max_length=10,
                    ),
                ),
                ("taxability", models.BooleanField()),
                (
                    "income_distribution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="income_investment_types",
                        to="scenarios.distribution",
                    ),
                ),
                (
                    "return_distribution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="return_investment_types",
                        to="scenarios.distribution",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Scenario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "marital_status",
                    models.CharField(
                        choices=[("individual", "Individual"), ("couple", "Couple")],
                        max_length=10,
                    ),
                ),
                ("user_birth_year", models.IntegerField()),
                ("spouse_birth_year", models.IntegerField(blank=True, null=True)),
                ("after_tax_contribution_limit", models.FloatField()),
                ("financial_goal", models.FloatField()),
                ("residence_state", models.CharField(max_length=2)),
                ("roth_conversion_opt", models.BooleanField(default=False)),
                ("roth_conversion_start", models.IntegerField(blank=True, null=True)),
                ("roth_conversion_end", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "inflation_assumption",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inflation_scenarios",
                        to="scenarios.distribution",
                    ),
                ),
                (
                    "spouse_life_expectancy",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spouse_life_expectancy_scenarios",
                        to="scenarios.distribution",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_life_expectancy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_life_expectancy_scenarios",
                        to="scenarios.distribution",
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="Investment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.FloatField()),
                (
                    "tax_status",
                    models.CharField(
                        choices=[
                            ("non-retirement", "Non-retirement"),
                            ("pre-tax", "Pre-tax Retirement"),
                            ("after-tax", "After-tax Retirement"),
                        ],
                        max_length=15,
                    ),
                ),
                ("investment_id", models.CharField(max_length=100)),
                (
                    "investment_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scenarios.investmenttype",
                    ),
                ),
                (
                    "scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="investments",
                        to="scenarios.scenario",
                    ),
                ),
            ],
            options={
                "unique_together": {("scenario", "investment_id")},
            },
        ),
        migrations.CreateModel(
            name="EventSeries",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "start_type",
                    models.CharField(
                        choices=[
                            ("distribution", "Distribution"),
                            ("start_with", "Start With Event"),
                            ("start_after", "Start After Event"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("income", "Income"),
                            ("expense", "Expense"),
                            ("invest", "Invest"),
                            ("rebalance", "Rebalance"),
                        ],
                        max_length=10,
                    ),
                ),
                ("initial_amount", models.FloatField(blank=True, null=True)),
                (
                    "change_amt_or_pct",
                    models.CharField(
                        blank=True,
                        choices=[("amount", "Amount"), ("percent", "Percent")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("inflation_adjusted", models.BooleanField(default=False)),
                ("user_fraction", models.FloatField(blank=True, null=True)),
                ("social_security", models.BooleanField(default=False)),
                ("discretionary", models.BooleanField(default=False)),
                ("max_cash", models.FloatField(blank=True, null=True)),
                ("glide_path", models.BooleanField(default=False)),
                (
                    "change_distribution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="change_event_series",
                        to="scenarios.distribution",
                    ),
                ),
                (
                    "duration_distribution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="duration_event_series",
                        to="scenarios.distribution",
                    ),
                ),
                (
                    "start_after_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="start_after_dependents",
                        to="scenarios.eventseries",
                    ),
                ),
                (
                    "start_distribution",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="start_event_series",
                        to="scenarios.distribution",
                    ),
                ),
                (
                    "start_with_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="start_with_dependents",
                        to="scenarios.eventseries",
                    ),
                ),
                (
                    "scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_series",
                        to="scenarios.scenario",
                    ),
                ),
            ],
            options={
                "unique_together": {("scenario", "name")},
            },
        ),
        migrations.CreateModel(
            name="AssetAllocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("percentage", models.FloatField()),
                ("is_final_allocation", models.BooleanField(default=False)),
                (
                    "event_series",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asset_allocations",
                        to="scenarios.eventseries",
                    ),
                ),
                (
                    "investment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scenarios.investment",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("event_series", "investment", "is_final_allocation")
                },
            },
        ),
        migrations.CreateModel(
            name="RothConversionStrategyItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                (
                    "investment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scenarios.investment",
                    ),
                ),
                (
                    "scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roth_conversion_strategy_items",
                        to="scenarios.scenario",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
                "unique_together": {("scenario", "investment")},
            },
        ),
        migrations.CreateModel(
            name="RMDStrategyItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                (
                    "investment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scenarios.investment",
                    ),
                ),
                (
                    "scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rmd_strategy_items",
                        to="scenarios.scenario",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
                "unique_together": {("scenario", "investment")},
            },
        ),
        migrations.CreateModel(
            name="ExpenseWithdrawalStrategyItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                (
                    "investment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scenarios.investment",
                    ),
                ),
                (
                    "scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expense_withdrawal_strategy_items",
                        to="scenarios.scenario",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
                "unique_together": {("scenario", "investment")},
            },
        ),
        migrations.CreateModel(
            name="SpendingStrategyItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                (
                    "event_series",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scenarios.eventseries",
                    ),
                ),
                (
                    "scenario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="spending_strategy_items",
                        to="scenarios.scenario",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
                "unique_together": {("scenario", "event_series")},
            },
        ),
    ]
