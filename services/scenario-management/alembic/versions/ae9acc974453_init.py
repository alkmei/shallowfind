"""init

Revision ID: ae9acc974453
Revises: 
Create Date: 2025-07-18 00:41:56.179184

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ae9acc974453'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('google_id', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('google_id')
    )
    op.create_table('investment_types',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('expected_annual_return', sa.JSON(), nullable=False),
    sa.Column('expense_ratio', sa.Numeric(precision=6, scale=4), nullable=True),
    sa.Column('expected_annual_income', sa.JSON(), nullable=False),
    sa.Column('taxability', sa.Enum('taxable', 'tax_exempt', name='taxabilityenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scenarios',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('scenario_type', sa.Enum('individual', 'married_couple', name='scenariotypeenum'), nullable=False),
    sa.Column('user_birth_year', sa.Integer(), nullable=True),
    sa.Column('spouse_birth_year', sa.Integer(), nullable=True),
    sa.Column('user_life_expectancy', sa.JSON(), nullable=True),
    sa.Column('spouse_life_expectancy', sa.JSON(), nullable=True),
    sa.Column('financial_goal', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('state_of_residence', sa.String(length=2), nullable=True),
    sa.Column('inflation_assumption', sa.JSON(), nullable=False),
    sa.Column('annual_contribution_limit', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('status', sa.Enum('draft', 'complete', 'published', name='statusenum'), nullable=False),
    sa.Column('sharing_enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('state_tax_yaml', sa.Text(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_series',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('scenario_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('event_type', sa.Enum('income', 'expense', 'invest', 'rebalance', name='eventtypeenum'), nullable=False),
    sa.Column('start_year_distribution', sa.JSON(), nullable=False),
    sa.Column('duration_distribution', sa.JSON(), nullable=False),
    sa.Column('reference_event_series_id', sa.UUID(), nullable=True),
    sa.Column('initial_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('amount_change_distribution', sa.JSON(), nullable=True),
    sa.Column('inflation_adjusted', sa.Boolean(), nullable=True),
    sa.Column('is_social_security', sa.Boolean(), nullable=True),
    sa.Column('user_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('is_discretionary', sa.Boolean(), nullable=True),
    sa.Column('maximum_cash', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['reference_event_series_id'], ['event_series.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('investments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('scenario_id', sa.UUID(), nullable=False),
    sa.Column('investment_type_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('current_value', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('cost_basis', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('account_tax_status', sa.Enum('non_retirement', 'pre_tax_retirement', 'after_tax_retirement', name='accounttaxstatusenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['investment_type_id'], ['investment_types.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roth_conversion_optimizer_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('scenario_id', sa.UUID(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('scenario_id')
    )
    op.create_table('scenario_sharing',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('scenario_id', sa.UUID(), nullable=False),
    sa.Column('shared_with_user_id', sa.UUID(), nullable=False),
    sa.Column('permission_level', sa.Enum('read', 'write', name='permissionlevelenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['shared_with_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('scenario_id', 'shared_with_user_id')
    )
    op.create_table('event_asset_allocations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event_series_id', sa.UUID(), nullable=False),
    sa.Column('investment_id', sa.UUID(), nullable=False),
    sa.Column('allocation_type', sa.Enum('fixed', 'glide_path', name='allocationtypeenum'), nullable=False),
    sa.Column('initial_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('final_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['event_series_id'], ['event_series.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['investment_id'], ['investments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expense_withdrawal_strategies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('scenario_id', sa.UUID(), nullable=False),
    sa.Column('investment_id', sa.UUID(), nullable=False),
    sa.Column('withdrawal_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['investment_id'], ['investments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('scenario_id', 'investment_id'),
    sa.UniqueConstraint('scenario_id', 'withdrawal_order')
    )
    op.create_table('rmd_strategies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('scenario_id', sa.UUID(), nullable=False),
    sa.Column('investment_id', sa.UUID(), nullable=False),
    sa.Column('withdrawal_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['investment_id'], ['investments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('scenario_id', 'investment_id'),
    sa.UniqueConstraint('scenario_id', 'withdrawal_order')
    )
    op.create_table('roth_conversion_strategies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('scenario_id', sa.UUID(), nullable=False),
    sa.Column('investment_id', sa.UUID(), nullable=False),
    sa.Column('conversion_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['investment_id'], ['investments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('scenario_id', 'conversion_order'),
    sa.UniqueConstraint('scenario_id', 'investment_id')
    )
    op.create_table('spending_strategies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('scenario_id', sa.UUID(), nullable=False),
    sa.Column('expense_event_series_id', sa.UUID(), nullable=False),
    sa.Column('priority_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['expense_event_series_id'], ['event_series.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('scenario_id', 'expense_event_series_id'),
    sa.UniqueConstraint('scenario_id', 'priority_order')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('spending_strategies')
    op.drop_table('roth_conversion_strategies')
    op.drop_table('rmd_strategies')
    op.drop_table('expense_withdrawal_strategies')
    op.drop_table('event_asset_allocations')
    op.drop_table('scenario_sharing')
    op.drop_table('roth_conversion_optimizer_settings')
    op.drop_table('investments')
    op.drop_table('event_series')
    op.drop_table('user_profiles')
    op.drop_table('scenarios')
    op.drop_table('investment_types')
    op.drop_table('users')
    # ### end Alembic commands ###
